{
  "issues": [
    {
      "id": "missingIncludeSystem",
      "severity": "information",
      "message": "Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.",
      "file": "src/main.cpp",
      "line": 1,
      "code_context": {
        "lines": [
          {
            "number": 1,
            "content": "#include <iostream>",
            "is_target": true
          },
          {
            "number": 2,
            "content": "#include <vector>",
            "is_target": false
          },
          {
            "number": 3,
            "content": "",
            "is_target": false
          },
          {
            "number": 4,
            "content": "class TestClass {",
            "is_target": false
          },
          {
            "number": 5,
            "content": "private:",
            "is_target": false
          },
          {
            "number": 6,
            "content": "    int* data;",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "missingIncludeSystem",
      "severity": "information",
      "message": "Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.",
      "file": "src/main.cpp",
      "line": 2,
      "code_context": {
        "lines": [
          {
            "number": 1,
            "content": "#include <iostream>",
            "is_target": false
          },
          {
            "number": 2,
            "content": "#include <vector>",
            "is_target": true
          },
          {
            "number": 3,
            "content": "",
            "is_target": false
          },
          {
            "number": 4,
            "content": "class TestClass {",
            "is_target": false
          },
          {
            "number": 5,
            "content": "private:",
            "is_target": false
          },
          {
            "number": 6,
            "content": "    int* data;",
            "is_target": false
          },
          {
            "number": 7,
            "content": "    int size;",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "functionStatic",
      "severity": "performance",
      "message": "Technically the member function 'TestClass::process' can be static (but you may consider moving to unnamed namespace).",
      "file": "src/main.cpp",
      "line": 15,
      "code_context": {
        "lines": [
          {
            "number": 10,
            "content": "        data = new int[size];",
            "is_target": false
          },
          {
            "number": 11,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 12,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 13,
            "content": "    // Missing destructor - memory leak!",
            "is_target": false
          },
          {
            "number": 14,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 15,
            "content": "    void process() {",
            "is_target": true
          },
          {
            "number": 16,
            "content": "        int uninitializedVar;",
            "is_target": false
          },
          {
            "number": 17,
            "content": "        std::cout << uninitializedVar << std::endl; // Using uninitialized variable",
            "is_target": false
          },
          {
            "number": 18,
            "content": "        ",
            "is_target": false
          },
          {
            "number": 19,
            "content": "        int* ptr = nullptr;",
            "is_target": false
          },
          {
            "number": 20,
            "content": "        *ptr = 10; // Null pointer dereference",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "functionStatic",
      "severity": "performance",
      "message": "Technically the member function 'TestClass::unnecessaryFunction' can be static (but you may consider moving to unnamed namespace).",
      "file": "src/main.cpp",
      "line": 23,
      "code_context": {
        "lines": [
          {
            "number": 18,
            "content": "        ",
            "is_target": false
          },
          {
            "number": 19,
            "content": "        int* ptr = nullptr;",
            "is_target": false
          },
          {
            "number": 20,
            "content": "        *ptr = 10; // Null pointer dereference",
            "is_target": false
          },
          {
            "number": 21,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 22,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 23,
            "content": "    void unnecessaryFunction(int param) {",
            "is_target": true
          },
          {
            "number": 24,
            "content": "        // Unused parameter",
            "is_target": false
          },
          {
            "number": 25,
            "content": "        int localVar = 5;",
            "is_target": false
          },
          {
            "number": 26,
            "content": "        // Missing return statement for non-void function",
            "is_target": false
          },
          {
            "number": 27,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 28,
            "content": "};",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "noCopyConstructor",
      "severity": "warning",
      "message": "Class 'TestClass' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
      "file": "src/main.cpp",
      "line": 10,
      "code_context": {
        "lines": [
          {
            "number": 5,
            "content": "private:",
            "is_target": false
          },
          {
            "number": 6,
            "content": "    int* data;",
            "is_target": false
          },
          {
            "number": 7,
            "content": "    int size;",
            "is_target": false
          },
          {
            "number": 8,
            "content": "public:",
            "is_target": false
          },
          {
            "number": 9,
            "content": "    TestClass(int s) : size(s) {",
            "is_target": false
          },
          {
            "number": 10,
            "content": "        data = new int[size];",
            "is_target": true
          },
          {
            "number": 11,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 12,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 13,
            "content": "    // Missing destructor - memory leak!",
            "is_target": false
          },
          {
            "number": 14,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 15,
            "content": "    void process() {",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "noOperatorEq",
      "severity": "warning",
      "message": "Class 'TestClass' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s).",
      "file": "src/main.cpp",
      "line": 10,
      "code_context": {
        "lines": [
          {
            "number": 5,
            "content": "private:",
            "is_target": false
          },
          {
            "number": 6,
            "content": "    int* data;",
            "is_target": false
          },
          {
            "number": 7,
            "content": "    int size;",
            "is_target": false
          },
          {
            "number": 8,
            "content": "public:",
            "is_target": false
          },
          {
            "number": 9,
            "content": "    TestClass(int s) : size(s) {",
            "is_target": false
          },
          {
            "number": 10,
            "content": "        data = new int[size];",
            "is_target": true
          },
          {
            "number": 11,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 12,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 13,
            "content": "    // Missing destructor - memory leak!",
            "is_target": false
          },
          {
            "number": 14,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 15,
            "content": "    void process() {",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "noDestructor",
      "severity": "warning",
      "message": "Class 'TestClass' does not have a destructor which is recommended since it has dynamic memory/resource allocation(s).",
      "file": "src/main.cpp",
      "line": 10,
      "code_context": {
        "lines": [
          {
            "number": 5,
            "content": "private:",
            "is_target": false
          },
          {
            "number": 6,
            "content": "    int* data;",
            "is_target": false
          },
          {
            "number": 7,
            "content": "    int size;",
            "is_target": false
          },
          {
            "number": 8,
            "content": "public:",
            "is_target": false
          },
          {
            "number": 9,
            "content": "    TestClass(int s) : size(s) {",
            "is_target": false
          },
          {
            "number": 10,
            "content": "        data = new int[size];",
            "is_target": true
          },
          {
            "number": 11,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 12,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 13,
            "content": "    // Missing destructor - memory leak!",
            "is_target": false
          },
          {
            "number": 14,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 15,
            "content": "    void process() {",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "noExplicitConstructor",
      "severity": "style",
      "message": "Class 'TestClass' has a constructor with 1 argument that is not explicit.",
      "file": "src/main.cpp",
      "line": 9,
      "code_context": {
        "lines": [
          {
            "number": 4,
            "content": "class TestClass {",
            "is_target": false
          },
          {
            "number": 5,
            "content": "private:",
            "is_target": false
          },
          {
            "number": 6,
            "content": "    int* data;",
            "is_target": false
          },
          {
            "number": 7,
            "content": "    int size;",
            "is_target": false
          },
          {
            "number": 8,
            "content": "public:",
            "is_target": false
          },
          {
            "number": 9,
            "content": "    TestClass(int s) : size(s) {",
            "is_target": true
          },
          {
            "number": 10,
            "content": "        data = new int[size];",
            "is_target": false
          },
          {
            "number": 11,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 12,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 13,
            "content": "    // Missing destructor - memory leak!",
            "is_target": false
          },
          {
            "number": 14,
            "content": "    ",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "unsafeClassCanLeak",
      "severity": "style",
      "message": "Class 'TestClass' is unsafe, 'TestClass::data' can leak by wrong usage.",
      "file": "src/main.cpp",
      "line": 6,
      "code_context": {
        "lines": [
          {
            "number": 1,
            "content": "#include <iostream>",
            "is_target": false
          },
          {
            "number": 2,
            "content": "#include <vector>",
            "is_target": false
          },
          {
            "number": 3,
            "content": "",
            "is_target": false
          },
          {
            "number": 4,
            "content": "class TestClass {",
            "is_target": false
          },
          {
            "number": 5,
            "content": "private:",
            "is_target": false
          },
          {
            "number": 6,
            "content": "    int* data;",
            "is_target": true
          },
          {
            "number": 7,
            "content": "    int size;",
            "is_target": false
          },
          {
            "number": 8,
            "content": "public:",
            "is_target": false
          },
          {
            "number": 9,
            "content": "    TestClass(int s) : size(s) {",
            "is_target": false
          },
          {
            "number": 10,
            "content": "        data = new int[size];",
            "is_target": false
          },
          {
            "number": 11,
            "content": "    }",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "nullPointer",
      "severity": "error",
      "message": "Null pointer dereference: ptr",
      "file": "src/main.cpp",
      "line": 20,
      "code_context": {
        "lines": [
          {
            "number": 15,
            "content": "    void process() {",
            "is_target": false
          },
          {
            "number": 16,
            "content": "        int uninitializedVar;",
            "is_target": false
          },
          {
            "number": 17,
            "content": "        std::cout << uninitializedVar << std::endl; // Using uninitialized variable",
            "is_target": false
          },
          {
            "number": 18,
            "content": "        ",
            "is_target": false
          },
          {
            "number": 19,
            "content": "        int* ptr = nullptr;",
            "is_target": false
          },
          {
            "number": 20,
            "content": "        *ptr = 10; // Null pointer dereference",
            "is_target": true
          },
          {
            "number": 21,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 22,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 23,
            "content": "    void unnecessaryFunction(int param) {",
            "is_target": false
          },
          {
            "number": 24,
            "content": "        // Unused parameter",
            "is_target": false
          },
          {
            "number": 25,
            "content": "        int localVar = 5;",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "containerOutOfBounds",
      "severity": "error",
      "message": "Out of bounds access in expression 'v[10]' because 'v' is empty.",
      "file": "src/main.cpp",
      "line": 32,
      "code_context": {
        "lines": [
          {
            "number": 27,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 28,
            "content": "};",
            "is_target": false
          },
          {
            "number": 29,
            "content": "",
            "is_target": false
          },
          {
            "number": 30,
            "content": "int main() {",
            "is_target": false
          },
          {
            "number": 31,
            "content": "    std::vector<int> v;",
            "is_target": false
          },
          {
            "number": 32,
            "content": "    v[10] = 5; // Out of bounds access",
            "is_target": true
          },
          {
            "number": 33,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 34,
            "content": "    TestClass* obj = new TestClass(10);",
            "is_target": false
          },
          {
            "number": 35,
            "content": "    obj->process();",
            "is_target": false
          },
          {
            "number": 36,
            "content": "    // Missing delete - memory leak",
            "is_target": false
          },
          {
            "number": 37,
            "content": "    ",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "uninitvar",
      "severity": "error",
      "message": "Uninitialized variable: uninitializedVar",
      "file": "src/main.cpp",
      "line": 17,
      "code_context": {
        "lines": [
          {
            "number": 12,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 13,
            "content": "    // Missing destructor - memory leak!",
            "is_target": false
          },
          {
            "number": 14,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 15,
            "content": "    void process() {",
            "is_target": false
          },
          {
            "number": 16,
            "content": "        int uninitializedVar;",
            "is_target": false
          },
          {
            "number": 17,
            "content": "        std::cout << uninitializedVar << std::endl; // Using uninitialized variable",
            "is_target": true
          },
          {
            "number": 18,
            "content": "        ",
            "is_target": false
          },
          {
            "number": 19,
            "content": "        int* ptr = nullptr;",
            "is_target": false
          },
          {
            "number": 20,
            "content": "        *ptr = 10; // Null pointer dereference",
            "is_target": false
          },
          {
            "number": 21,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 22,
            "content": "    ",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "unassignedVariable",
      "severity": "style",
      "message": "Variable 'uninitializedVar' is not assigned a value.",
      "file": "src/main.cpp",
      "line": 16,
      "code_context": {
        "lines": [
          {
            "number": 11,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 12,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 13,
            "content": "    // Missing destructor - memory leak!",
            "is_target": false
          },
          {
            "number": 14,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 15,
            "content": "    void process() {",
            "is_target": false
          },
          {
            "number": 16,
            "content": "        int uninitializedVar;",
            "is_target": true
          },
          {
            "number": 17,
            "content": "        std::cout << uninitializedVar << std::endl; // Using uninitialized variable",
            "is_target": false
          },
          {
            "number": 18,
            "content": "        ",
            "is_target": false
          },
          {
            "number": 19,
            "content": "        int* ptr = nullptr;",
            "is_target": false
          },
          {
            "number": 20,
            "content": "        *ptr = 10; // Null pointer dereference",
            "is_target": false
          },
          {
            "number": 21,
            "content": "    }",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "unreadVariable",
      "severity": "style",
      "message": "Variable 'localVar' is assigned a value that is never used.",
      "file": "src/main.cpp",
      "line": 25,
      "code_context": {
        "lines": [
          {
            "number": 20,
            "content": "        *ptr = 10; // Null pointer dereference",
            "is_target": false
          },
          {
            "number": 21,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 22,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 23,
            "content": "    void unnecessaryFunction(int param) {",
            "is_target": false
          },
          {
            "number": 24,
            "content": "        // Unused parameter",
            "is_target": false
          },
          {
            "number": 25,
            "content": "        int localVar = 5;",
            "is_target": true
          },
          {
            "number": 26,
            "content": "        // Missing return statement for non-void function",
            "is_target": false
          },
          {
            "number": 27,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 28,
            "content": "};",
            "is_target": false
          },
          {
            "number": 29,
            "content": "",
            "is_target": false
          },
          {
            "number": 30,
            "content": "int main() {",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "unreadVariable",
      "severity": "style",
      "message": "Variable 'v[10]' is assigned a value that is never used.",
      "file": "src/main.cpp",
      "line": 32,
      "code_context": {
        "lines": [
          {
            "number": 27,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 28,
            "content": "};",
            "is_target": false
          },
          {
            "number": 29,
            "content": "",
            "is_target": false
          },
          {
            "number": 30,
            "content": "int main() {",
            "is_target": false
          },
          {
            "number": 31,
            "content": "    std::vector<int> v;",
            "is_target": false
          },
          {
            "number": 32,
            "content": "    v[10] = 5; // Out of bounds access",
            "is_target": true
          },
          {
            "number": 33,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 34,
            "content": "    TestClass* obj = new TestClass(10);",
            "is_target": false
          },
          {
            "number": 35,
            "content": "    obj->process();",
            "is_target": false
          },
          {
            "number": 36,
            "content": "    // Missing delete - memory leak",
            "is_target": false
          },
          {
            "number": 37,
            "content": "    ",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "unusedFunction",
      "severity": "style",
      "message": "The function 'unnecessaryFunction' is never used.",
      "file": "src/main.cpp",
      "line": 23,
      "code_context": {
        "lines": [
          {
            "number": 18,
            "content": "        ",
            "is_target": false
          },
          {
            "number": 19,
            "content": "        int* ptr = nullptr;",
            "is_target": false
          },
          {
            "number": 20,
            "content": "        *ptr = 10; // Null pointer dereference",
            "is_target": false
          },
          {
            "number": 21,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 22,
            "content": "    ",
            "is_target": false
          },
          {
            "number": 23,
            "content": "    void unnecessaryFunction(int param) {",
            "is_target": true
          },
          {
            "number": 24,
            "content": "        // Unused parameter",
            "is_target": false
          },
          {
            "number": 25,
            "content": "        int localVar = 5;",
            "is_target": false
          },
          {
            "number": 26,
            "content": "        // Missing return statement for non-void function",
            "is_target": false
          },
          {
            "number": 27,
            "content": "    }",
            "is_target": false
          },
          {
            "number": 28,
            "content": "};",
            "is_target": false
          }
        ]
      }
    },
    {
      "id": "checkersReport",
      "severity": "information",
      "message": "Active checkers: 172/592 (use --checkers-report=<filename> to see details)",
      "file": "",
      "line": 0
    }
  ]
}