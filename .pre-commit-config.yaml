default_language_version:
  python: python3
  node: 18.17.0

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: \.(md|json)$
      - id: end-of-file-fixer
        exclude: \.(json|txt)$
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
        exclude: tsconfig.json
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: detect-private-key
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]

  # Python checks
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        files: \.(py|pyi)$
        args: [--line-length=100]

  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=100, --extend-ignore=E203]
        additional_dependencies: [flake8-docstrings]

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile, black, --line-length, "100"]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests]
        args: [--ignore-missing-imports]

  # JavaScript/TypeScript checks
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        args: [--fix]
        additional_dependencies:
          - eslint@8.56.0
          - eslint-config-prettier@9.1.0
          - eslint-plugin-prettier@5.1.2
          - "@typescript-eslint/eslint-plugin@6.15.0"
          - "@typescript-eslint/parser@6.15.0"

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, json, yaml, markdown]
        exclude: \.(min\.js|bundle\.js)$

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]

  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.18.1
    hooks:
      - id: gitleaks

  # Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Shell scripts
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck

  # GitHub Actions
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.27.3
    hooks:
      - id: check-github-actions
      - id: check-github-workflows

  # Commit message
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Local custom hooks
  - repo: local
    hooks:
      - id: no-console-log
        name: Check for console.log
        entry: '(?<!// *)console\.log'
        language: pygrep
        types: [javascript, typescript]
        exclude: \.(test|spec)\.(js|ts)$

      - id: no-debug-code
        name: Check for debug code
        entry: '(debugger|pdb\.set_trace|import pdb)'
        language: pygrep
        types: [python, javascript, typescript]

      - id: check-typescript-build
        name: TypeScript Build Check
        entry: bash -c 'cd cppcheck-dashboard-generator && npm run typecheck'
        language: system
        types: [typescript]
        pass_filenames: false

      - id: check-npm-audit
        name: NPM Security Audit
        entry: bash -c 'cd cppcheck-dashboard-generator && npm audit --production --audit-level=high'
        language: system
        pass_filenames: false
        files: package-lock\.json$

      - id: validate-ci-files
        name: Validate CI YAML files
        entry: bash -c 'for f in .github/workflows/*.yml; do yq eval "." "$f" > /dev/null || exit 1; done'
        language: system
        files: \.github/workflows/.*\.yml$
        pass_filenames: false

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [no-commit-to-branch]
  submodules: false