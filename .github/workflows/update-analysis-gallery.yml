name: Update Analysis Gallery

on:
  workflow_run:
    workflows: ["On-Demand Repository Analysis"]
    types:
      - completed

permissions:
  contents: write
  pages: write
  id-token: write
  actions: read

jobs:
  update-gallery:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Download analysis artifacts
      uses: actions/download-artifact@v4
      with:
        name: analysis-*
        path: temp-artifacts
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Process artifacts and update gallery
      run: |
        # Find the artifact directory
        ARTIFACT_DIR=$(find temp-artifacts -name "metadata.json" -exec dirname {} \; | head -1)
        
        if [ -z "$ARTIFACT_DIR" ]; then
          echo "No artifacts found"
          exit 0
        fi
        
        # Read metadata
        METADATA=$(cat "$ARTIFACT_DIR/metadata.json")
        ANALYSIS_ID=$(echo "$METADATA" | jq -r .analysis_id)
        REPO=$(echo "$METADATA" | jq -r .repository)
        
        # Create results directory
        mkdir -p docs/results/$ANALYSIS_ID
        
        # Copy dashboard to results
        cp "$ARTIFACT_DIR"/dashboard-*.html "docs/results/$ANALYSIS_ID/index.html"
        cp "$ARTIFACT_DIR/metadata.json" "docs/results/$ANALYSIS_ID/"
        cp "$ARTIFACT_DIR/summary.txt" "docs/results/$ANALYSIS_ID/" || true
        
        # Update gallery index
        GALLERY_FILE="docs/api/gallery.json"
        mkdir -p docs/api
        
        # Create or update gallery
        if [ -f "$GALLERY_FILE" ]; then
          # Add new entry to existing gallery
          jq --argjson new "$METADATA" '.analyses = ([$new] + .analyses | unique_by(.repository))' "$GALLERY_FILE" > temp.json
          mv temp.json "$GALLERY_FILE"
        else
          # Create new gallery
          echo "{\"analyses\": [$METADATA]}" | jq . > "$GALLERY_FILE"
        fi
        
        # Update main API index
        cp "$GALLERY_FILE" docs/api/index.json
        
        # Create/update repository-specific file
        REPO_SAFE=$(echo "$REPO" | tr '/' '_')
        echo "$METADATA" > "docs/api/repos/${REPO_SAFE}.json"
        
        # Commit changes
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add docs/results docs/api
        git commit -m "Add analysis results for ${REPO} (${ANALYSIS_ID})" || echo "No changes"
        git push