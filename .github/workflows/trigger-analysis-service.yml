name: Trigger Analysis Service

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-analysis]

permissions:
  contents: write
  actions: write

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Trigger analysis workflow
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN || github.token }}
      run: |
        # Get repository from event payload or workflow input
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          REPO="${{ github.event.client_payload.repository }}"
          BRANCH="${{ github.event.client_payload.branch || 'main' }}"
        else
          REPO="${{ github.event.inputs.repository || 'jerryzhao173985/cppcheck-studio' }}"
          BRANCH="${{ github.event.inputs.branch || 'main' }}"
        fi
        
        echo "Triggering analysis for: $REPO (branch: $BRANCH)"
        
        # Trigger the analysis workflow
        gh workflow run analyze-on-demand.yml \
          -R ${{ github.repository }} \
          -f repository="$REPO" \
          -f branch="$BRANCH" \
          -f max_files=500
        
        # Get the run ID
        sleep 5
        RUN_ID=$(gh run list -R ${{ github.repository }} --workflow=analyze-on-demand.yml --limit 1 --json databaseId -q '.[0].databaseId')
        
        echo "Started analysis run: $RUN_ID"
        
        # Store in repository data
        mkdir -p data/analyses
        TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
        ANALYSIS_ID="${TIMESTAMP}-${RUN_ID}"
        
        cat > data/analyses/${ANALYSIS_ID}.json << EOF
        {
          "id": "${ANALYSIS_ID}",
          "repository": "${REPO}",
          "branch": "${BRANCH}",
          "runId": "${RUN_ID}",
          "status": "running",
          "timestamp": "${TIMESTAMP}"
        }
        EOF
        
        # Commit the analysis record
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add data/analyses/${ANALYSIS_ID}.json
        git commit -m "Add analysis record for ${REPO}" || echo "No changes to commit"
        git push || echo "Nothing to push"