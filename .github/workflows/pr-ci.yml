name: PR - Continuous Integration

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  checks: write
  security-events: write

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Validate PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          chore
          ci
          revert
        requireScope: false
        subjectPattern: ^[A-Z].+[^.]$
        subjectPatternError: |
          The subject "{subject}" found in the pull request title "{title}" should:
          - Start with a capital letter
          - Not end with a period
    
    - name: Check PR size
      run: |
        # Get PR stats
        ADDITIONS=$(jq .additions < $GITHUB_EVENT_PATH)
        DELETIONS=$(jq .deletions < $GITHUB_EVENT_PATH)
        TOTAL_CHANGES=$((ADDITIONS + DELETIONS))
        CHANGED_FILES=$(jq .changed_files < $GITHUB_EVENT_PATH)
        
        echo "### 📊 PR Statistics" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| Files Changed | $CHANGED_FILES |" >> $GITHUB_STEP_SUMMARY
        echo "| Lines Added | +$ADDITIONS |" >> $GITHUB_STEP_SUMMARY
        echo "| Lines Deleted | -$DELETIONS |" >> $GITHUB_STEP_SUMMARY
        echo "| Total Changes | $TOTAL_CHANGES |" >> $GITHUB_STEP_SUMMARY
        
        # Warn if PR is too large
        if [ "$TOTAL_CHANGES" -gt 1000 ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Warning**: This PR contains $TOTAL_CHANGES changes. Consider breaking it into smaller PRs." >> $GITHUB_STEP_SUMMARY
        elif [ "$CHANGED_FILES" -gt 50 ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Warning**: This PR modifies $CHANGED_FILES files. Consider breaking it into smaller PRs." >> $GITHUB_STEP_SUMMARY
        fi

  test:
    name: Test Suite
    needs: pr-validation
    uses: ./.github/workflows/01-test.yml
    permissions:
      contents: read
      security-events: write

  security:
    name: Security Scanning
    needs: pr-validation
    uses: ./.github/workflows/02-security.yml
    permissions:
      contents: read
      security-events: write
      actions: read

  build:
    name: Build & Validate
    needs: pr-validation
    uses: ./.github/workflows/03-build.yml
    permissions:
      contents: read

  e2e-tests:
    name: E2E Tests
    needs: build
    uses: ./.github/workflows/07-e2e-tests.yml
    permissions:
      contents: read

  performance:
    name: Performance Tests
    needs: build
    uses: ./.github/workflows/08-performance.yml
    permissions:
      contents: read
      issues: write
      pull-requests: write

  api-tests:
    name: API Tests
    needs: build
    uses: ./.github/workflows/09-api-tests.yml
    permissions:
      contents: read
      pages: read

  preview-deploy:
    name: Preview Deployment
    needs: build
    uses: ./.github/workflows/10-preview-deploy.yml
    permissions:
      contents: read
      pull-requests: write
      deployments: write
      actions: read
      pages: write
      id-token: write

  pr-comment:
    name: PR Comment
    runs-on: ubuntu-latest
    needs: [test, security, build, e2e-tests, performance, api-tests, preview-deploy]
    if: always()
    
    steps:
    - name: Find existing comment
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: '<!-- pr-ci-results -->'
    
    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        edit-mode: replace
        body: |
          <!-- pr-ci-results -->
          ## 🤖 CI Results
          
          ### Core Checks
          | Check | Status | Details |
          |-------|--------|---------|
          | 🧪 Tests | ${{ needs.test.result == 'success' && '✅ Passed' || needs.test.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | Coverage: ${{ needs.test.outputs.coverage || 'N/A' }}% |
          | 🔒 Security | ${{ needs.security.result == 'success' && '✅ Passed' || needs.security.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | [View Security Tab](../security) |
          | 🏗️ Build | ${{ needs.build.result == 'success' && '✅ Passed' || needs.build.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | Version: ${{ needs.build.outputs.typescript-version || 'N/A' }} |
          
          ### Extended Checks
          | Check | Status | Details |
          |-------|--------|---------|
          | 🎭 E2E Tests | ${{ needs.e2e-tests.result == 'success' && '✅ Passed' || needs.e2e-tests.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | Browser & Visual Tests |
          | ⚡ Performance | ${{ needs.performance.result == 'success' && '✅ Passed' || needs.performance.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | No Regressions |
          | 🔌 API Tests | ${{ needs.api-tests.result == 'success' && '✅ Passed' || needs.api-tests.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | Endpoints Valid |
          | 🚀 Preview | ${{ needs.preview-deploy.result == 'success' && '✅ Deployed' || needs.preview-deploy.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | [View Preview](https://jerryzhao173985.github.io/cppcheck-studio/preview/pr-${{ github.event.pull_request.number }}/) |
          
          <details>
          <summary>📋 Workflow Details</summary>
          
          - **Triggered by**: @${{ github.actor }}
          - **Commit**: ${{ github.event.pull_request.head.sha }}
          - **Workflow Run**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - **Total Duration**: ~${{ github.run_number }} minutes
          
          </details>
          
          ---
          *Last updated: ${{ github.event.pull_request.updated_at }}*

  required-checks:
    name: Required Checks
    runs-on: ubuntu-latest
    needs: [test, security, build, e2e-tests, performance, api-tests]
    if: always()
    
    steps:
    - name: Check results
      run: |
        echo "### 📋 CI Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check if all required jobs passed
        REQUIRED_PASSED=true
        OPTIONAL_PASSED=true
        
        # Required checks
        [ "${{ needs.test.result }}" != "success" ] && REQUIRED_PASSED=false
        [ "${{ needs.security.result }}" != "success" ] && REQUIRED_PASSED=false
        [ "${{ needs.build.result }}" != "success" ] && REQUIRED_PASSED=false
        
        # Optional but recommended checks
        [ "${{ needs.e2e-tests.result }}" != "success" ] && [ "${{ needs.e2e-tests.result }}" != "skipped" ] && OPTIONAL_PASSED=false
        [ "${{ needs.performance.result }}" != "success" ] && [ "${{ needs.performance.result }}" != "skipped" ] && OPTIONAL_PASSED=false
        [ "${{ needs.api-tests.result }}" != "success" ] && [ "${{ needs.api-tests.result }}" != "skipped" ] && OPTIONAL_PASSED=false
        
        if [ "$REQUIRED_PASSED" = "true" ] && [ "$OPTIONAL_PASSED" = "true" ]; then
          echo "## ✅ All checks passed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This PR is ready to merge." >> $GITHUB_STEP_SUMMARY
          exit 0
        elif [ "$REQUIRED_PASSED" = "true" ]; then
          echo "## ⚠️ Required checks passed, optional checks failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Required Checks ✅" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Result |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Test | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Optional Checks ⚠️" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Result |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ needs.e2e-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance | ${{ needs.performance.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| API Tests | ${{ needs.api-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Consider fixing optional checks before merging." >> $GITHUB_STEP_SUMMARY
          exit 0
        else
          echo "## ❌ Required checks failed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Result | Required |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| Test | ${{ needs.test.result }} | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security.result }} | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result }} | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ needs.e2e-tests.result }} | ⭕ |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance | ${{ needs.performance.result }} | ⭕ |" >> $GITHUB_STEP_SUMMARY
          echo "| API Tests | ${{ needs.api-tests.result }} | ⭕ |" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi