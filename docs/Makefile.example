# Example Makefile integration for CPPCheck Studio
# Copy this to your project and customize as needed

.PHONY: analyze dashboard clean-analysis help

# Configuration
CPPCHECK_STUDIO ?= cppcheck-studio
SRC_DIRS ?= src include lib
OUTPUT_DIR ?= build/analysis
DASHBOARD ?= $(OUTPUT_DIR)/dashboard.html

# Default target
help:
	@echo "CPPCheck Studio Makefile Targets:"
	@echo "  make analyze    - Run full analysis and generate dashboard"
	@echo "  make dashboard  - Generate dashboard from existing analysis"
	@echo "  make clean      - Remove analysis files"
	@echo ""
	@echo "Options:"
	@echo "  DASHBOARD_TYPE=minimal  - Use minimal dashboard (no code)"
	@echo "  DASHBOARD_TYPE=robust   - Use robust dashboard"
	@echo "  DASHBOARD_TYPE=virtual  - Use virtual scroll (default)"

# Run complete analysis
analyze: $(OUTPUT_DIR)
	@echo "üîç Running CPPCheck analysis..."
	@$(CPPCHECK_STUDIO) $(SRC_DIRS) -o $(DASHBOARD)
	@echo "‚úÖ Dashboard ready: file://$(shell pwd)/$(DASHBOARD)"

# Quick analysis (no code context)
quick: $(OUTPUT_DIR)
	@echo "‚ö° Running quick analysis..."
	@$(CPPCHECK_STUDIO) $(SRC_DIRS) -o $(DASHBOARD) --no-code
	@echo "‚úÖ Dashboard ready: file://$(shell pwd)/$(DASHBOARD)"

# Generate dashboard with specific type
dashboard: $(OUTPUT_DIR)
	@$(CPPCHECK_STUDIO) $(SRC_DIRS) -o $(DASHBOARD) --type $(DASHBOARD_TYPE)

# Create output directory
$(OUTPUT_DIR):
	@mkdir -p $(OUTPUT_DIR)

# Clean analysis files
clean-analysis:
	@echo "üßπ Cleaning analysis files..."
	@rm -rf $(OUTPUT_DIR)

# Integration with CI/CD
ci-analyze: analyze
	@echo "::set-output name=dashboard::$(DASHBOARD)"
	@echo "::set-output name=issues::$(shell grep -c '<error' $(OUTPUT_DIR)/cppcheck.xml 2>/dev/null || echo 0)"

# Watch mode (requires fswatch or inotify-tools)
watch:
	@echo "üëÅÔ∏è  Watching for changes..."
	@fswatch -o $(SRC_DIRS) | xargs -n1 -I{} make analyze

# Generate report for specific files
analyze-changed:
	@echo "üîç Analyzing changed files..."
	@git diff --name-only HEAD | grep -E '\.(cpp|hpp|h|c)$$' | \
		xargs $(CPPCHECK_STUDIO) -o $(DASHBOARD)

# Example: Integration with existing build
all: build analyze

build:
	@echo "üî® Building project..."
	# Your build commands here

# Install CPPCheck Studio
install-tools:
	@echo "üì¶ Installing CPPCheck Studio..."
	@cd /path/to/cppcheck-studio && ./install.sh